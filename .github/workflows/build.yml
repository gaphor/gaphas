name: build

on:
  push:
  release:
    types: [created, published]

env:
  python-version: '3.12'

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-22.04
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0d381219ddf674d61a7572ddd19d7941e271515c # v2.9.0
        with:
          egress-policy: audit

      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - name: Set up Python
        uses: actions/setup-python@39cd14951b08e74b54015e9e001cdefcf80e669f # v5.1.1
        with:
          python-version: ${{ env.python-version }}
      - name: Lint with pre-commit
        uses: pre-commit/action@2c7b3805fd2a0fd8c1884dcaebf91fc102a13ecd # v3.0.1
      - name: Check REUSE compliance
        run: pip install reuse && python -m reuse lint
      - name: Check Poetry lock file integrity
        run: |
          python${{ env.python-version }} -m pip install --constraint=.github/constraints.txt poetry
          poetry config virtualenvs.in-project true
          poetry check

  build:
    needs: lint
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
    name: build python ${{ matrix.python-version }}
    outputs:
      targz: gaphas-${{ steps.meta.outputs.version }}.tar.gz
      wheel: gaphas-${{ steps.meta.outputs.version }}-py3-none-any.whl
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0d381219ddf674d61a7572ddd19d7941e271515c # v2.9.0
        with:
          egress-policy: audit

      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@39cd14951b08e74b54015e9e001cdefcf80e669f # v5.1.1
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true
      - name: Use Python Dependency Cache
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install Ubuntu Dependencies
        run: |
          sudo apt update -qq
          sudo apt install -qq --no-install-recommends gir1.2-gtk-4.0 libgirepository1.0-dev
      - name: Install Poetry
        run: |
          python${{ matrix.python-version }} -m pip install --constraint=.github/constraints.txt poetry
          poetry config virtualenvs.in-project true
      - name: Collect Project Data
        id: meta
        run: .github/scripts/metadata.sh
      - name: Install dependencies
        run: poetry install --no-interaction
      - name: Test
        run: xvfb-run poetry run pytest --cov=gaphas
      - name: Code Climate Coverage Action
        uses: paambaati/codeclimate-action@7c100bd1ed15de0bdee476b38ca759d8c94207b5 # v8.0.0
        env:
          CC_TEST_REPORTER_ID: 195e9f83022747c8eefa3ec9510dd730081ef111acd99c98ea0efed7f632ff8a
        with:
          coverageCommand: poetry run coverage xml
      - name: Create Source Dist and Wheel
        if: ${{ matrix.python-version == env.python-version }}
        run: poetry build
      - name: Upload gaphas-${{ steps.meta.outputs.version }}.tar.gz
        if: ${{ matrix.python-version == env.python-version }}
        uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4.3.4
        with:
          name: gaphas-${{ steps.meta.outputs.version }}.tar.gz
          path: dist/gaphas-${{ steps.meta.outputs.version }}.tar.gz
      - name: Upload gaphas-${{ steps.meta.outputs.version }}-py3-none-any.whl
        if: ${{ matrix.python-version == env.python-version }}
        uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4.3.4
        with:
          name: gaphas-${{ steps.meta.outputs.version }}-py3-none-any.whl
          path: dist/gaphas-${{ steps.meta.outputs.version }}-py3-none-any.whl

  publish-to-pypi:
    name: Publish to PyPI (release only)
    needs: build
    runs-on: ubuntu-22.04
    permissions:
      id-token: write
    if: ${{ github.event_name == 'release' }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0d381219ddf674d61a7572ddd19d7941e271515c # v2.9.0
        with:
          egress-policy: audit

      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: ${{ needs.build.outputs.targz }}
          path: dist
      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: ${{ needs.build.outputs.wheel }}
          path: dist
      - uses: pypa/gh-action-pypi-publish@ec4db0b4ddc65acdf4bff5fa45ac92d78b56bdf0 # release/v1
