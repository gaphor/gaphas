name: build

on:
  push:
  release:
    types: [created, published]

env:
  POETRY_VERSION: 1.1.5

jobs:
  lint:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Set up Python
        uses: actions/setup-python@v2.2.2
      - name: Lint with pre-commit
        uses: pre-commit/action@v2.0.2
  test:
    needs: lint
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: [3.8, 3.9]
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2.2.2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Use Python Dependency Cache
        uses: actions/cache@v2.1.5
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install Ubuntu Dependencies
        run: >
          sudo apt-get update -q && sudo apt-get install
          --no-install-recommends -y xvfb python3-dev python3-gi
          python3-gi-cairo gir1.2-gtk-3.0 libgirepository1.0-dev libcairo2-dev
      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry==$POETRY_VERSION
      - name: Install dependencies
        run: |
          pip install tox tox-gh-actions coverage
      - name: Test with tox
        run: tox
      - name: Code Climate Coverage Action
        uses: paambaati/codeclimate-action@v2.7.5
        env:
          CC_TEST_REPORTER_ID: 195e9f83022747c8eefa3ec9510dd730081ef111acd99c98ea0efed7f632ff8a
        with:
          coverageCommand: coverage xml
      - name: Build
        run: poetry build
      - name: Upload Assets (release only)
        uses: AButler/upload-release-assets@v2.0
        if: github.event_name == 'release' && matrix.python-version == '3.8'
        with:
          files: "dist/*"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish to PyPI (release only)
        if: github.event_name == 'release' && matrix.python-version == '3.8'
        run: poetry publish -u __token__ -p ${{ secrets.PYPI_TOKEN }}
